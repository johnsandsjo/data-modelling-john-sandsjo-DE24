SET search_path TO hospital_ex1;

INSERT INTO hospital (name, address)
VALUES  ('Sjukhusstocken', 'Drottninggatan 3, Stockholm'),
        ('Södersjukhuset', 'Ringvägen 100, Stockholm');

INSERT INTO doctor (name)
VALUES 
    ('Dr. Abra Abrahamson'),
    ('Dr. Erika Eriksson'),
    ('Dr. Sven Svensson'),
    ('Dr. Berit Beritsson');

INSERT INTO department (name)
VALUES 
    ('Neurologi'),
    ('Kardiologi'),
    ('Urologi');

INSERT INTO hospitaldepartment (hospital_id, department_id)
VALUES 
    (1, 1),
    (1, 2),
    (1, 3),
    (2, 1),
    (2, 2),
    (2, 3);

INSERT INTO doctordepartment (department_id, doctor_id)
VALUES 
    (1, 1),
    (2, 1),
    (2, 2),
    (3, 3),
    (3, 4),
    (3, 4);

SET search_path TO hospital_ex1;
INSERT INTO hospitaldoctor (hospital_id, doctor_id)
VALUES 
    --(1, 1),
    --(1, 2),
    (2, 1),
    (2, 3),
    (2, 4);

-- b)
INSERT INTO hospital_ex1.hospitaldepartment (hospital_id, department_id)
VALUES (10,2);
-- gives the following error
-- ERROR: insert or update on table "hospitaldepartment" violates 
-- foreign key constraint "hospitaldepartment_hospital_id_fkey"

-- c)
SELECT * FROM hospital_ex1.department;

INSERT INTO hospital_ex1.hospitaldepartment
    (hospital_id, department_id)
VALUES (2,4);
-- sam problem as above. I am trying to add a department who does not exist into the hsopital. Since my domain constraints is stipulated it is a child table it does not work

-- d)
DELETE FROM hospital_ex1.hospital
WHERE hospital_id = 1;
-- here we vioalte the foeign key constraints with hospital_ex1.hospitaldepartment
-- referential integrity is inferred

-- e)
--first I need to remove the constraints
ALTER TABLE hospital_ex1.hospitaldepartment
DROP CONSTRAINT hospitaldepartment_hospital_id_fkey;

--Then add a new one with cascade
ALTER TABLE hospital_ex1.hospitaldepartment
ADD CONSTRAINT hospitaldepartment_hospital_id_fkey
FOREIGN KEY (hospital_id)
REFERENCES hospital_ex1.hospital (hospital_id)
ON DELETE CASCADE;

--Now try to delete the row
DELETE FROM hospital_ex1.hospital
WHERE hospital_id = 1;
--did not work either, dropping table and adding new constraints
--DROP TABLE hospital_ex1.hospitaldepartment;
--DROP TABLE hospital_ex1.hospitaldoctor;
--DROP TABLE hospital_ex1.hospital;
-- and creating them again with new cascading CONSTRAINTS
-- now trying again
DELETE FROM hospital_ex1.hospital
WHERE hospital_id = 1;

SELECT * FROM hospital_ex1.hospital;
SELECT * FROM hospital_ex1.hospitaldepartment;
SELECT * FROM hospital_ex1.hospitaldoctor;

--all hsopital id ones are gone!!
-- Is there an easier way to introduce these constraints?

-- f) 
UPDATE hospital_ex1.hospital
    SET name = NULL
    WHERE hospital_id = 2;
--Gives errro:
--ERROR: null value in column "name" of relation 
---"hospital" violates not-null constraint
-- This is NOT a domain constraint. This is a NOT NULL violation
INSERT INTO hospital_ex1.hospital (name, address)
VALUES ('fshdiöuhseiuheöiuhtreöiuhgeöragiuheörtoiughreöotuihgeöoaruhgöroeatuhjbgöortieuhbgöortiuhböortidögofbjhsdfgbjhdgöfobjhgdfoboödgfibjogöfdjböogfijbsoijoöijosdi', 'husgatan 1, gbg');
-- not again: this is only a a data type constraint violation.
INSERT INTO hospital_ex1.hospital (hospital_id, name, address)
VALUES (11, 'sjukus2', 'sjukhusadress');
-- not even an error

--adding a CHECK constraint here
ALTER TABLE hospital_ex1.hospital
ADD CONSTRAINT address_has_comma
CHECK (address LIKE '%,%');

INSERT INTO hospital_ex1.hospital (hospital_id, name, address)
VALUES (11, 'sjukus2', 'sjukhusadress');


-- Test some joins
SELECT h.name, d.name
FROM hospital_ex1.hospital as h
LEFT JOIN hospital_ex1.hospitaldoctor as hd
ON h.hospital_id = hd.hospital_id
LEFT JOIN hospital_ex1.doctor as d
ON d.doctor_id = hd.doctor_id;